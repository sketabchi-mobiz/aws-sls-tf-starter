{
  "name": "aws-sls-tf",
  "version": "0.1.0",
  "description": "Terraform Accelerator for AWS APIs",
  "repository": {
    "type": "git",
    "url": "https://seyedk/aws-sls-tf/aws-sls-tf.git"
  },
  "author": {
    "name": "seyedk",
    "url": "https://seyedk.com"
  },
  "contributors": [
    "Michael J Smith <michael.j.smith@slalom.com>",
    "Seyed K. <seyedk@slalom.com>"
  ],
  "config": {
    "artifacts_bucket": "aws-sls-tf-artifacts",
    "awscli_profile": "aws-sls-tf",
    "code_extension": "ts"
  },
  "scripts": {
    "aws:login": "local_setup/aws-login.sh ${npm_package_config_awscli_profile}",
    "aws:mac:login": "aws-azure-login --no-prompt --profile ${npm_package_config_awscli_profile}",
    "aws:ps:login": "powershell.exe -Command \"aws-azure-login --no-prompt --profile ${npm_package_config_awscli_profile}\"",
    "aws:whoami": "aws sts --profile ${npm_package_config_awscli_profile} get-caller-identity",
    "start": "npm run build && npm run docker && npm run service",
    "build": "npm run build:config -- config/webpack.config.release.js",
    "build:config": "npm run clean && webpack --bail --config ",
    "build:dev": "npm run build:config -- config/webpack.config.dev.js --progress",
    "build:watch": "npm run build:dev -- --watch",
    "clean": "rm -rf dist",
    "clean:unit-tests": "rm -rf .nyc_output coverage",
    "debug": "npm run build:dev && npm run service -- --debug-port 5858",
    "docker": "docker ps > /dev/null 2>&1 || dockerd-rootless.sh --experimental --iptables=false --storage-driver vfs &",
    "dynamo:network": "docker network create aws-sls-tf-network",
    "dynamo:start": "docker-compose up -d && local_setup/init-dynamodb-local.sh ${npm_package_name} ${npm_package_config_awscli_profile}",
    "dynamo:stop": "docker-compose down",
    "init": "npm run whoami && npm run stack-name && mkdir -p build/output",
    "lint": "eslint './src/**/*.ts' && npm run lint:apitests",
    "lint:js": "eslint --no-eslintrc -c config/js.eslintrc.yml './src_js/**/*.js' && npm run lint:apitests",
    "lint:apitests": "eslint --parser-options=project:api-tests/tsconfig.json './api-tests/**/*.ts'",
    "lint:fix": "eslint './src/**/*.ts' --fix && npm run lint:apitests -- --fix",
    "lint:apitests:fix": "npm run lint:apitests -- --fix",
    "nyc": "nyc ts-node config/jasmine.runner.ts",
    "nyc:js": "nyc node config/jasmine.runner.js",
    "package-deploy": "npm run init && npm run build && npm run sam:package && npm run sam:deploy",
    "prettier": "prettier --write './src/**/*.{ts,js,json,md,yml}'",
    "prettier:apitests": "prettier --write './api-tests/**/*.{ts,js,json,md,yml}'",
    "sam:validate": "sam validate --profile ${npm_package_config_awscli_profile} --template microservice.sam.yml",
    "sam:package": "aws cloudformation package --profile ${npm_package_config_awscli_profile} --s3-bucket ${npm_package_config_artifacts_bucket} --template-file microservice.sam.yml --s3-prefix developer-build-artifacts/${npm_package_name}/${npm_config_whoami}/developer-0.0.1/lambda --output-template-file build/output/package.yml",
    "sam:deploy": "aws cloudformation deploy --profile ${npm_package_config_awscli_profile} --template-file build/output/package.yml --stack-name ${npm_config_stack_name} --capabilities CAPABILITY_IAM --parameter-overrides paramReleaseVersion=developer-0.0.1 paramFeatureBranch=${npm_config_whoami}",
    "service": "sam local start-api --profile ${npm_package_config_awscli_profile} --template microservice.sam.yml --docker-network aws-sls-tf-network --parameter-overrides \"ParameterKey=paramFeatureBranch,ParameterValue=local\" --skip-pull-image",
    "stack-name": "npm config set stack_name developer-${npm_config_whoami}-${npm_package_name}",
    "test": "npm run clean:unit-tests && npm run lint && npm run nyc",
    "test:js": "npm run clean:unit-tests && npm run lint:js && npm run nyc:js",
    "test:api": "ts-node api-tests/config/jasmine.runner.ts",
    "test:api:local": "export API_ENV=local && npm run test:api",
    "test:api:branch": "export BRANCH_NAME && npm run test:api:dev",
    "test:api:dev": "export API_ENV=dev && npm run test:api",
    "tsc:verify": "tsc --noEmit",
    "whoami": "npm config set whoami `whoami | sed 's/\\.//g'`"
  },
  "private": true,
  "license": "UNLICENSED",
  "dependencies": {
    "aws-api-gateway-client": "^0.3.7",
    "aws-sdk": "^2.963.0",
    "axios": "^0.21.1",
    "inversify": "^5.1.1",
    "jwt-decode": "^3.1.2",
    "reflect-metadata": "^0.1.13",
    "uuid": "^8.3.2",
    "yup": "^0.29.3"
  },
  "devDependencies": {
    "@types/aws-lambda": "^8.10.81",
    "@types/chance": "^1.1.3",
    "@types/jasmine": "^3.8.2",
    "@types/node": "^14.17.14",
    "@types/uuid": "^8.3.1",
    "@types/yup": "^0.29.13",
    "@typescript-eslint/eslint-plugin": "^4.29.0",
    "@typescript-eslint/parser": "^4.29.0",
    "amazon-cognito-identity-js": "^5.0.6",
    "chance": "^1.1.7",
    "cuid": "^2.1.8",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.0",
    "isomorphic-fetch": "^3.0.0",
    "jasmine": "^3.8.0",
    "jasmine-spec-reporter": "^7.0.0",
    "nyc": "^15.1.0",
    "prettier": "^2.3.2",
    "terser-webpack-plugin": "^5.1.4",
    "ts-loader": "^9.2.5",
    "ts-node": "^10.1.0",
    "typescript": "^4.3.5",
    "webpack": "^5.49.0",
    "webpack-cli": "^4.9.1"
  },
  "nyc": {
    "check-coverage": true,
    "exclude-after-remap": false,
    "all": true,
    "clean": true,
    "lines": 80,
    "functions": 80,
    "branches": 80,
    "extension": [
      ".js",
      ".ts"
    ],
    "include": [
      "src/**/*.js",
      "src/**/*.ts"
    ],
    "exclude": [
      "**/*.spec.*",
      "src/models/*"
    ],
    "reporter": [
      "lcov",
      "text"
    ]
  }
}
